package gui.panel;

import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.util.HashMap;
import static javax.swing.BorderFactory.createTitledBorder;
import javax.swing.border.TitledBorder;

/**
 * @author      Giuseppe Bonura giuseppe.bonura@studenti.unimi.it
 * @version     1.0
 */
public class singleTrackGui extends javax.swing.JPanel
{
    /**
    * Contains all the components that make up the panel
    */
    private HashMap componentMapSingleTrack;
    
    public singleTrackGui()
    {
        initComponents();
        createComponentMap(); 
    }
    
    /**
    * Method used for set dynamically the border title with the number of Track
    * @param  inputTitle Name of border 
    */
    public void setBorderTitle(String inputTitle)
    {
        setBorder(createTitledBorder(null, inputTitle, TitledBorder.LEFT, TitledBorder.DEFAULT_POSITION, new Font("Comic Sans MS", 0, 12), new Color(0, 0, 0)));
    }
    
    /**
    * Method for setting the name extracted from the XML file inside the JLabel having a specific name
    * @param  inputValue Value saved in the JLabel fileNameValueLabel
    */
    public void setFileNameValueLabel(String inputValue)
    {
        fileNameValueLabel.setText(inputValue);
    }
    
    /**
    * Method for setting the name extracted from the XML file inside the JLabel having a specific name
    * @param  inputValue Value saved in the JLabel fileFormatValueLabel
    */
    public void setFileFormatValueLabel(String inputValue)
    {
        fileFormatValueLabel.setText(inputValue);
    }
    
    /**
    * Method for setting the name extracted from the XML file inside the JLabel having a specific name
    * @param  inputValue Value saved in the JLabel encodingFormatValueLabel
    */
    public void setEncodingFormatValueLabel(String inputValue)
    {
        encodingFormatValueLabel.setText(inputValue);
    }
    
    /**
    * Method for setting the name extracted from the XML file inside the JLabel having a specific name
    * @param  inputValue Value saved in the JLabel durationValueLabel
    */
    public void setDurationValueLabel(String inputValue)
    {
        durationValueLabel.setText(inputValue);
    }
    
    /**
    * Method for setting the name extracted from the XML file inside the JLabel having a specific name
    * @param  inputValue Value saved in the JLabel performersValueLabel
    */
    public void setPerformersValueLabel(String inputValue)
    {
        performersValueLabel.setText(inputValue);
    }
    
    /**
    * Method for setting the name extracted from the XML file inside the JLabel having a specific name
    * @param  inputValue Value saved in the JLabel genresSingleTrackValueLabel
    */
    public void setGenresSingleTrackValueLabel(String inputValue)
    {
        genresSingleTrackValueLabel.setText(inputValue);
    }
    
    /**
    * Method that generates a list of components present in the JPanel singleTrackGui
    */
    private void createComponentMap()
    {
        componentMapSingleTrack = new HashMap<String,Component>();
        Component[] components = this.getComponents();
        for(int i=0; i < components.length; i++)
        {
            componentMapSingleTrack.put(components[i].getName(), components[i]);
            //System.out.println("Component Name: " + components[i].getName());
        }
    }
    
    /**
    * @param  name The name of the component that we want returned
    * @return The component that is called how the paramter passed in input
    */
    public Component getComponentSingleTrackByName(String name)
    {
        if(componentMapSingleTrack.containsKey(name))
        {
            return (Component) componentMapSingleTrack.get(name);
        }
        else return null;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileNameLabel = new javax.swing.JLabel();
        fileFormatLabel = new javax.swing.JLabel();
        encodingFormatLabel = new javax.swing.JLabel();
        durationLabel = new javax.swing.JLabel();
        fileNameValueLabel = new javax.swing.JLabel();
        durationValueLabel = new javax.swing.JLabel();
        fileFormatValueLabel = new javax.swing.JLabel();
        encodingFormatValueLabel = new javax.swing.JLabel();
        performersLabel = new javax.swing.JLabel();
        performersValueLabel = new javax.swing.JLabel();
        genresSingleTrackLabel = new javax.swing.JLabel();
        genresSingleTrackValueLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(214, 217, 223));
        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Track x", javax.swing.border.TitledBorder.LEFT, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Comic Sans MS", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N
        setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        setPreferredSize(new java.awt.Dimension(500, 110));
        setLayout(null);

        fileNameLabel.setBackground(new java.awt.Color(255, 255, 255));
        fileNameLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        fileNameLabel.setForeground(new java.awt.Color(0, 0, 0));
        fileNameLabel.setText("File Name");
        fileNameLabel.setName("fileNameLabel"); // NOI18N
        add(fileNameLabel);
        fileNameLabel.setBounds(10, 20, 58, 18);

        fileFormatLabel.setBackground(new java.awt.Color(255, 255, 255));
        fileFormatLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        fileFormatLabel.setForeground(new java.awt.Color(0, 0, 0));
        fileFormatLabel.setText("File Format:");
        fileFormatLabel.setName("fileFormatLabel"); // NOI18N
        add(fileFormatLabel);
        fileFormatLabel.setBounds(10, 40, 71, 18);

        encodingFormatLabel.setBackground(new java.awt.Color(255, 255, 255));
        encodingFormatLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        encodingFormatLabel.setForeground(new java.awt.Color(0, 0, 0));
        encodingFormatLabel.setText("Encoding Format:");
        encodingFormatLabel.setName("encodingFormatLabel"); // NOI18N
        add(encodingFormatLabel);
        encodingFormatLabel.setBounds(170, 40, 99, 18);

        durationLabel.setBackground(new java.awt.Color(255, 255, 255));
        durationLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        durationLabel.setForeground(new java.awt.Color(0, 0, 0));
        durationLabel.setText("Duration:");
        durationLabel.setName("durationLabel"); // NOI18N
        add(durationLabel);
        durationLabel.setBounds(340, 40, 54, 18);

        fileNameValueLabel.setForeground(new java.awt.Color(0, 0, 0));
        fileNameValueLabel.setText("fileName");
        fileNameValueLabel.setName("fileNameValueLabel"); // NOI18N
        add(fileNameValueLabel);
        fileNameValueLabel.setBounds(75, 21, 410, 16);

        durationValueLabel.setForeground(new java.awt.Color(0, 0, 0));
        durationValueLabel.setText("duration");
        durationValueLabel.setName("durationValueLabel"); // NOI18N
        add(durationValueLabel);
        durationValueLabel.setBounds(400, 40, 90, 16);

        fileFormatValueLabel.setForeground(new java.awt.Color(0, 0, 0));
        fileFormatValueLabel.setText("format");
        fileFormatValueLabel.setName("fileFormatValueLabel"); // NOI18N
        add(fileFormatValueLabel);
        fileFormatValueLabel.setBounds(85, 40, 70, 16);

        encodingFormatValueLabel.setForeground(new java.awt.Color(0, 0, 0));
        encodingFormatValueLabel.setText("encoding");
        encodingFormatValueLabel.setName("encodingFormatValueLabel"); // NOI18N
        add(encodingFormatValueLabel);
        encodingFormatValueLabel.setBounds(275, 40, 60, 16);

        performersLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        performersLabel.setForeground(new java.awt.Color(0, 0, 0));
        performersLabel.setText("Artists:");
        performersLabel.setName("performersLabel"); // NOI18N
        add(performersLabel);
        performersLabel.setBounds(10, 60, 47, 18);

        performersValueLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        performersValueLabel.setForeground(new java.awt.Color(0, 0, 0));
        performersValueLabel.setText("artistsName");
        performersValueLabel.setName("performersValueLabel"); // NOI18N
        add(performersValueLabel);
        performersValueLabel.setBounds(65, 60, 420, 18);

        genresSingleTrackLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        genresSingleTrackLabel.setForeground(new java.awt.Color(0, 0, 0));
        genresSingleTrackLabel.setText("Genres:");
        genresSingleTrackLabel.setName("genresSingleTrackLabel"); // NOI18N
        add(genresSingleTrackLabel);
        genresSingleTrackLabel.setBounds(10, 80, 45, 18);

        genresSingleTrackValueLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 12)); // NOI18N
        genresSingleTrackValueLabel.setForeground(new java.awt.Color(0, 0, 0));
        genresSingleTrackValueLabel.setText("genresValue");
        genresSingleTrackValueLabel.setName("genresSingleTrackValueLabel"); // NOI18N
        add(genresSingleTrackValueLabel);
        genresSingleTrackValueLabel.setBounds(65, 80, 420, 18);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel durationLabel;
    private javax.swing.JLabel durationValueLabel;
    private javax.swing.JLabel encodingFormatLabel;
    private javax.swing.JLabel encodingFormatValueLabel;
    private javax.swing.JLabel fileFormatLabel;
    private javax.swing.JLabel fileFormatValueLabel;
    private javax.swing.JLabel fileNameLabel;
    private javax.swing.JLabel fileNameValueLabel;
    private javax.swing.JLabel genresSingleTrackLabel;
    private javax.swing.JLabel genresSingleTrackValueLabel;
    private javax.swing.JLabel performersLabel;
    private javax.swing.JLabel performersValueLabel;
    // End of variables declaration//GEN-END:variables
}
